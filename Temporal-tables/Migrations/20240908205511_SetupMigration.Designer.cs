// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace TemporalTable.Migrations
{
    [DbContext(typeof(ExperimentDbContext))]
    [Migration("20240908205511_SetupMigration")]
    partial class SetupMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShadowProps.Models.AuthorEntity", b =>
                {
                    b.Property<long>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AuthorId"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("AuthorCreation")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("AuthorCreation");

                    b.Property<DateTime>("AuthorRemoval")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("AuthorRemoval");

                    b.Property<DateTimeOffset>("BirthDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("AuthorId");

                    b.HasIndex(new[] { "FirstName" }, "IX_Author_FirstName");

                    b.ToTable("Authors", (string)null);

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("AuthorsHistory");
                                ttb
                                    .HasPeriodStart("AuthorCreation")
                                    .HasColumnName("AuthorCreation");
                                ttb
                                    .HasPeriodEnd("AuthorRemoval")
                                    .HasColumnName("AuthorRemoval");
                            }));
                });

            modelBuilder.Entity("ShadowProps.Models.BookEntity", b =>
                {
                    b.Property<long>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("BookId"));

                    b.Property<long?>("AuthorEntityAuthorId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("BookCreation")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("BookCreation");

                    b.Property<DateTime>("BookRemoval")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("BookRemoval");

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Pages")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("BookId");

                    b.HasIndex("AuthorEntityAuthorId");

                    b.HasIndex(new[] { "Title" }, "IX_Books_Title");

                    b.HasIndex(new[] { "Isbn" }, "UX_Books_Isbn")
                        .IsUnique();

                    b.ToTable("BookEntity");

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("BookEntityHistory");
                                ttb
                                    .HasPeriodStart("BookCreation")
                                    .HasColumnName("BookCreation");
                                ttb
                                    .HasPeriodEnd("BookRemoval")
                                    .HasColumnName("BookRemoval");
                            }));
                });

            modelBuilder.Entity("ShadowProps.Models.BookEntity", b =>
                {
                    b.HasOne("ShadowProps.Models.AuthorEntity", null)
                        .WithMany("Books")
                        .HasForeignKey("AuthorEntityAuthorId");
                });

            modelBuilder.Entity("ShadowProps.Models.AuthorEntity", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
