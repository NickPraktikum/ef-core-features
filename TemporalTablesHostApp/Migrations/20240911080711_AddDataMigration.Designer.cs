// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TemporalTablesHostApp.Data;

#nullable disable

namespace TemporalTablesHostApp.Migrations
{
    [DbContext(typeof(BookContext))]
    [Migration("20240911080711_AddDataMigration")]
    partial class AddDataMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TemporalTablesHostApp.Models.TodoModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("BookCreation")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("BookCreation");

                    b.Property<DateTime>("BookRemoval")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("BookRemoval");

                    b.Property<string>("Todo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Todo")
                        .HasColumnOrder(10);

                    b.HasKey("Id");

                    b.ToTable("Todos");

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("TodosHistory");
                                ttb
                                    .HasPeriodStart("BookCreation")
                                    .HasColumnName("BookCreation");
                                ttb
                                    .HasPeriodEnd("BookRemoval")
                                    .HasColumnName("BookRemoval");
                            }));

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Todo = "Do the grocery shopping"
                        },
                        new
                        {
                            Id = 2L,
                            Todo = "Do the ironing"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
